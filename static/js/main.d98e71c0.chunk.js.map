{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","lastItem","Math","ceil","Number","items","className","classNames","disabled","href","onClick","map","item","active","App","useState","setPerPage","setCurrentPage","startPage","stepPage","endPage","visibleItems","slice","length","id","value","onChange","event","target","htmlFor","page","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCGIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAWC,KAAKC,KAAKN,EAAQO,OAAON,IACpCO,EAAQf,EAAW,EAAGW,GAkB5B,OACE,qBAAIK,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAW,YAAa,CACjCC,SAA0B,IAAhBT,IAFd,SAKE,mBACE,UAAQ,WACRU,KAAK,QACL,gBAAc,OACdH,UAAU,YACVI,QA5BW,WACbX,EAAc,GAIlBC,EAAaD,EAAc,IAkBvB,oBAUDM,EAAMM,KAAI,SAACC,GAAD,OACT,oBAEEN,UAAWC,IAAW,YAAa,CACjCM,OAAQD,IAASb,IAHrB,SAME,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAK,KACLC,QAAS,kBAAMV,EAAaY,IAJ9B,SAMGA,KAXEA,MAeT,oBACEN,UAAWC,IAAW,YAAa,CACjCC,SAAUT,IAAgBE,IAF9B,SAKE,mBACE,UAAQ,WACRQ,KAAK,QACL,gBAAc,QACdH,UAAU,YACVI,QApDW,WACbX,EAAcF,GAIlBG,EAAaD,EAAc,IA0CvB,wBClEFM,EAAQf,EAFA,EACF,IAETqB,KAAI,SAAAjB,GAAC,gBAAOA,MAEFoB,EAAgB,WAC3B,MAA8BC,mBAAS,KAAvC,mBAAOjB,EAAP,KAAgBkB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOhB,EAAP,KAAoBkB,EAApB,KAEMC,GAAanB,EAAc,GAAKK,OAAON,GACvCqB,EAAWD,EAAYd,OAAON,GAC9BsB,EAAUD,EAVN,MAU6BA,EAEjCE,EAAehB,EAAMiB,MAAMJ,EAAWE,GAE5C,OACE,sBAAKd,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWP,EADX,mBACiCmB,EAAY,EAD7C,cACoDE,EADpD,eACkEf,EAAMkB,OADxE,OAIA,sBAAKjB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRkB,GAAG,kBACHlB,UAAU,eACVmB,MAAO3B,EACP4B,SAAU,SAACC,GACTV,EAAe,GACfD,EAAWW,EAAMC,OAAOH,QAP5B,UAUE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBvB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACET,MAAOQ,EAAMkB,OACbzB,QAASA,EACTC,YAAaA,EACbC,aAAc,SAAC8B,GAAD,OAAiBb,EAAea,MAEhD,6BACGT,EAAaV,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,wBAIWA,IAFJA,YC5DjBmB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d98e71c0.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total:number;\n  perPage:string;\n  currentPage:number;\n  onPageChange(page:number) : void;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const lastItem = Math.ceil(total / Number(perPage));\n  const items = getNumbers(1, lastItem);\n\n  const handlePrev = () => {\n    if (currentPage < 1) {\n      return;\n    }\n\n    onPageChange(currentPage - 1);\n  };\n\n  const handleNext = () => {\n    if (currentPage > total) {\n      return;\n    }\n\n    onPageChange(currentPage + 1);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames('page-item', {\n          disabled: currentPage === 1,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          href=\"#prev\"\n          aria-disabled=\"true\"\n          className=\"page-link\"\n          onClick={handlePrev}\n        >\n          «\n        </a>\n      </li>\n      {items.map((item) => (\n        <li\n          key={item}\n          className={classNames('page-item', {\n            active: item === currentPage,\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href=\"#1\"\n            onClick={() => onPageChange(item)}\n          >\n            {item}\n          </a>\n        </li>\n      ))}\n      <li\n        className={classNames('page-item', {\n          disabled: currentPage === lastItem,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          href=\"#next\"\n          aria-disabled=\"false\"\n          className=\"page-link\"\n          onClick={handleNext}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst start = 1;\nconst end = 42;\nconst items = getNumbers(start, end)\n  .map(n => `${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState('5');\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const startPage = (currentPage - 1) * Number(perPage);\n  const stepPage = startPage + Number(perPage);\n  const endPage = stepPage > end ? end : stepPage;\n\n  const visibleItems = items.slice(startPage, endPage);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startPage + 1} - ${endPage} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(event) => {\n              setCurrentPage(1);\n              setPerPage(event.target.value);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page:number) => setCurrentPage(page)}\n      />\n      <ul>\n        {visibleItems.map(item => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {`Item ${item}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}